<?php

/**
 * ## Description of all the possible relationships
 *
 * ------
 *
 * This file is auto-generated by:
 * SchenkeIo\LaravelRelationManager\Writer\GenerateRelationTypesTrait
 * using the data from: SchenkeIo\LaravelRelationManager\Enums\Relations
 */

namespace SchenkeIo\LaravelRelationManager\Define;

use SchenkeIo\LaravelRelationManager\Enums\Relations;

trait RelationTypes
{
    public function hasOne(string $modelName, bool $addReverseRelation): DefineRelation
    {
        return $this->buildRelation(
            $modelName,
            $addReverseRelation,
            Relations::hasOne,
            Relations::belongsTo
        );
    }

    public function hasMany(string $modelName, bool $addReverseRelation): DefineRelation
    {
        return $this->buildRelation(
            $modelName,
            $addReverseRelation,
            Relations::hasMany,
            Relations::belongsTo
        );
    }

    public function hasOneThrough(string $modelName): DefineRelation
    {
        return $this->buildRelation(
            $modelName,
            false,
            Relations::hasOneThrough,
            Relations::noRelation
        );
    }

    public function hasManyThrough(string $modelName): DefineRelation
    {
        return $this->buildRelation(
            $modelName,
            false,
            Relations::hasManyThrough,
            Relations::noRelation
        );
    }

    public function morphOne(string $modelName, bool $addReverseRelation): DefineRelation
    {
        return $this->buildRelation(
            $modelName,
            $addReverseRelation,
            Relations::morphOne,
            Relations::morphTo
        );
    }

    public function morphMany(string $modelName, bool $addReverseRelation): DefineRelation
    {
        return $this->buildRelation(
            $modelName,
            $addReverseRelation,
            Relations::morphMany,
            Relations::morphTo
        );
    }

    public function isManyToMany(string $modelName, bool $addReverseRelation): DefineRelation
    {
        return $this->buildRelation(
            $modelName,
            $addReverseRelation,
            Relations::isManyToMany,
            Relations::belongsToMany
        );
    }
}
